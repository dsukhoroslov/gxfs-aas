apiVersion: apps/v1
kind: Deployment
metadata:
  name: key-server
  labels:
    app: key-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: key-server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
#  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: key-server
    spec:
      containers:
        - name: key-server-image
          image: quay.io/keycloak/keycloak:17.0.1
#          imagePullPolicy: Always
          args:
            - "start-dev"
            - "-Dkeycloak.profile.feature.upload_scripts=enabled"
#            - "--log-level=DEBUG,io.quarkus:INFO,liquibase:INFO,org.hibernate:INFO,org.infinispan:INFO,org.keycloak.services.scheduled:INFO,org.keycloak.transaction:INFO"
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: key-server-pass-secret
                  key: username
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: key-server-pass-secret
                  key: password
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
#            - name: KEYCLOAK_FRONTEND_URL
#              value: "http://key-server:8080/"
#            - name: KEYCLOAK_ADMIN_URL
#              value: "http://key-server:8080/admin/"
          ports:
            - name: "http"
              containerPort: 8080
            - name: "https"
              containerPort: 8443
          readinessProbe:
            httpGet:
              path: "/realms/master"
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          resources: {}

      restartPolicy: Always
      serviceAccountName: keycloak
      serviceAccount: keycloak

#status: {}
