stages:
  - build
  - docker
  - deploy

variables:
  REGISTRY_PATH: ${CI_REGISTRY}/gaia-x/data-infrastructure-federation-services/
  IMAGE_NAME: ${CI_PROJECT_NAME}
  TAG: ${CI_PIPELINE_ID}

application-build:
  stage: build
  image:
    name: maven:3-jdk-11
  artifacts:
    paths:
      - deploy/docker/output
  only:
    - integration
    - main
    - /^release\/\d*[.]\d*[.]\d*$/
    - tags
  script:
    - mkdir -p deploy/docker/output
    - cd service
    - mvn clean install -DskipTests
    - cp ./target/*.jar ../deploy/docker/output/${CI_PROJECT_NAME}.jar

docker-build:
  stage: docker
  dependencies:
    - application-build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  only:
    - integration
    - main
    - /^release\/\d*[.]\d*[.]\d*$/
    - tags
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/service"
      --dockerfile "${CI_PROJECT_DIR}/service/Dockerfile"
      --destination "${REGISTRY_PATH}/${IMAGE_NAME}:${TAG}"

helm_package:
  stage: deploy
  image: dtzar/helm-kubectl:3.10.1
  rules:
    - if: $CI_TASK == "helm_package" && $CHANNEL
  script:
    - helm dependency update deploy/helm/${CHANNEL}
    - helm package deploy/helm/${CHANNEL} -d deploy/helm/package/${CHANNEL}
    - export FILE_NAME=$(ls deploy/helm/package/${CHANNEL}/*.tgz)
    - 'curl --request POST --user gitlab-ci-token:$CI_JOB_TOKEN --form "chart=@${FILE_NAME}" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/${CHANNEL}/charts"'

      
